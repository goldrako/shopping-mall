<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order">

	<insert id="insertOrder" parameterType="ordervo">
		<choose>
			<when test="userNo != null and userNo != ''">
				<![CDATA[
					insert into orders(no, user_no, order_no, name, gender, phone_number, 
					email, address, total_price, reg_date, message) values(null,
					#{userNo }, concat(
						DATE_FORMAT(now(),'%Y%m%d'), '-',
						lpad( ((select count(*) from orders ALIAS_FOR_SUBQUERY
						where DATE_FORMAT(reg_date, '%y%m%d') = DATE_FORMAT(now(), '%y%m%d') )+1), '6', '0' )
					), 
					AES_ENCRYPT(#{name }, SHA2(#{key }, 512)), #{gender },  
					AES_ENCRYPT(#{phoneNumber }, SHA2(#{key }, 512)), 
					AES_ENCRYPT(#{email }, SHA2(#{key }, 512)),
					AES_ENCRYPT(#{address }, SHA2(#{key }, 512)), #{totalPrice }, now(), #{message }
					)
				]]>
			</when> 
			<otherwise>
				<![CDATA[
					insert into orders values(null,
					0, concat(
						DATE_FORMAT(now(),'%Y%m%d'), '-',
						lpad( ((select count(*) from orders ALIAS_FOR_SUBQUERY
						where DATE_FORMAT(reg_date, '%y%m%d') = DATE_FORMAT(now(), '%y%m%d') )+1), '6', '0' )
					), 
					AES_ENCRYPT(#{name }, SHA2(#{key }, 512)), #{gender },  
					SHA2(#{password },512), 
					AES_ENCRYPT(#{phoneNumber }, SHA2(#{key }, 512)), 
					AES_ENCRYPT(#{email }, SHA2(#{key }, 512)),
					AES_ENCRYPT(#{address }, SHA2(#{key }, 512)), #{totalPrice }, now(), #{message }
					)
				]]>
			</otherwise>
		</choose> 
		
		<selectKey keyProperty="no" resultType="long" order="AFTER">
			<![CDATA[
				select last_insert_id()
			]]>
		</selectKey>
	</insert>
	
	
	<insert id="insertOrderDetail" parameterType="map">
		<![CDATA[ insert into orderdetail values ]]>
		<foreach collection="orderDetailList" item="option" separator=",">
		<![CDATA[
			(null, #{no },
			(select product_no from productoption where no = #{option.productOptionNo }) , 
			(select name from product where no = (select product_no from productoption where no = #{option.productOptionNo })),
			(select productoption_name from productoption where no = #{option.productOptionNo }), 
			#{option.quantity }, "배송준비중", 
			(select price from product where no = (select product_no from productoption where no = #{option.productOptionNo }))
			)
		]]>
		</foreach>
	</insert>
	
	<update id="reduceStock" parameterType="map">
		<foreach collection="productOptionList" item="option" index="index" separator=";">
		
			update productoption 
			set stock = stock - #{option.quantity } 
			where no = #{option.productOptionNo }
		
		</foreach>
	</update>
	
	<update id="updateEmployeeTrips" parameterType="java.util.List">
	    <foreach collection="list" item="employeeTrips" index="index" separator=";">
	        update employee_trips 
	        set pickup_drop_time = #{employeeTrips.pickupTime} 
	        where id = #{employeeTrips.id}
	    </foreach>
	</update>
	
	<select id="stockCheck" parameterType="long" resultType="Optionnamevo">
	<![CDATA[
		select use_stock useStock, stock
		from productoption
		where no = #{no }
	]]>
	</select>
</mapper>
