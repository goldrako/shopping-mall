<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">

	<resultMap id="productMap" type="productvo">
		<result  column="no" property="no" />
		<result  column="code" property="code" />
		<result  column="name" property="name" />
		<result  column="price" property="price" />
		<result  column="regDate" property="regDate" />
		<result  column="isShow" property="isShow" />
		<result  column="isOption" property="isOption" />
		<result  column="shippingFee" property="shippingFee" />
		<result  column="orderNo" property="orderNo" />
		<result  column="productoptionName" property="productoptionName" />
		<result  column="additionalAmount" property="additionalAmount" />
		<collection property="optionNameList" column="no" select="getProductOptionName" />
		<collection property="optionValueList" column="no" select="getProductOption" />
		<!-- property: vo 이름, column: 변수이름, select: select id -->
	</resultMap>

	<!-- 상품 리스트 -->
	<select id="getList" resultType="productvo">
	<![CDATA[
		select no, code, name, price, reg_date regDate, isshow isShow, isoption isOption, shipping_fee shippingFee, order_no orderNo
		from product
		order by no desc
	]]>
	</select>

	<!-- 카테고리 상품 리스트 , 조건 검색어 -->
	<select id="getList2" resultType="productvo">
	<![CDATA[
		select no, code, name, price, reg_date regDate, isshow isShow, isoption isOption, shipping_fee shippingFee, order_no orderNo
		from product
		where no in (select product_no from category_product where category_no=#{categoryNo })
	]]>
		<if test="keyword != null and keyword != ''">
		<![CDATA[
			and name like CONCAT('%',#{keyword },'%')
		]]>
		</if>
	<![CDATA[
		order by no desc
		limit 0, 5
	]]>
	</select>

	<!-- 상품 상세 정보 -->
	<select id="getProductDetail" parameterType="long" resultMap="productMap">
	<![CDATA[
		select no, code, name, price, reg_date as 'regDate', isshow as isShow, 
				isoption as isOption, shipping_fee as shippingFee, order_no as orderNo,
				contents
		from product 
		where no = #{productNo }
	]]>
	</select>
	
	<!-- 상품 상세 정보 옵션 가져오기 -->
	<select id="getProductOption" parameterType="long" resultType="optionvaluevo">
	<![CDATA[
		select o.no optionNo, o.name optionName, ov.value value
		from optionvalue ov, option o, product p
		where ov.optionname_no = o.no
		and p.no = ov.product_no
		and ov.product_no=#{no }
		order by o.no, ov.no
	]]>
	</select>
	
	<!-- 상품 상세 정보 최종옵션 가져오기 -->
	<select id="getProductOptionName" parameterType="long" resultType="optionnamevo">
	<![CDATA[
		select no, product_no productNo, productoption_name productOptionName,
			 	additional_amount additionalAmount, use_stock useStock, stock
		from productoption
		where product_no = #{no }
	]]>
	</select>


	<!-- 상품 등록 -->
	<insert id="addProduct" parameterType="productvo">
	 	<![CDATA[  
			insert into product
			values(null, "코드번호나중에", 
			#{name }, #{price }, now(), #{isShow }, #{isOption }, #{shippingFee }, 1, #{contents })
		 ]]>

		<selectKey keyProperty="no" resultType="long" order="AFTER">
			<![CDATA[
				select last_insert_id()
			]]>
		</selectKey>
	</insert>

	<!-- 상품의 카테고리 등록 -->
	<insert id="addCategoryAndProduct" parameterType="map">
	 	<![CDATA[ insert into category_product values ]]>
		<foreach collection="categoryList" item="category"
			separator=",">
			<![CDATA[ (null, #{category.no } , #{productNo}) ]]>
		</foreach>
	</insert>
	
	<!-- 최종 옵션 등록-->
	<insert id="addOptionNameVoList" parameterType="map">
	 	<![CDATA[ insert into productoption values ]]>
		<foreach collection="optionNameVoList" item="optionname" separator=",">
			<![CDATA[ (null, #{optionname.productNo } , #{optionname.productOptionName }, #{optionname.additionalAmount }, #{optionname.useStock }, #{optionname.stock }) ]]>
		</foreach>
	</insert>

	<!-- 옵션 중복 체크 -->
	<select id="getOption" parameterType="string"
		resultType="optionvo">
	<![CDATA[
		select * 
		from option
		where name=#{name }
	]]>
	</select>

	<!-- 상위 옵션 등록 -->
	<insert id="addOption" parameterType="optionvo">
		<![CDATA[
			insert into option
			values(null, #{name })
		]]>
		<selectKey keyProperty="no" resultType="long" order="AFTER">
			<![CDATA[
				select last_insert_id()
			]]>
		</selectKey>
	</insert>

	<!-- 하위 옵션 등록 -->
	<insert id="addOptionValue" parameterType="map">
	 	<![CDATA[ insert into optionvalue values ]]>
		<foreach collection="optionValueList" item="optionValue"
			separator=",">
			<![CDATA[ (null, #{productNo }, #{optionValue.optionNo }, #{optionValue.value }) ]]>
		</foreach>
	</insert>

	<!-- 상품 삭제 -->
	<delete id="delete" parameterType="long">
	<![CDATA[
		delete from product where no = #{no }
	]]>
	</delete>
	
	<!-- 상품 수정 -->
	<update id="modify" parameterType="productvo">
		<![CDATA[
			update product
			set name = #{name }, price = #{price }, isshow= #{isShow }, 
			isoption= #{isOption }, shipping_fee= #{shippingFee }, order_no= #{orderNo }, 
			contents= #{contents }
			where no = #{no }
		]]>
	</update>
	
	<!-- 하위 옵션 목록 -->
	<select id="getLowOption" parameterType="long" resultType="optionvaluevo">
	<![CDATA[
		select ov.no no, ov.product_no productNo, ov.optionname_no optionNo, o.name optionName, ov.value 
		from optionvalue ov, option o 
		where o.no = ov.optionname_no
		and product_no=#{no }
		order by optionname_no, no
	]]>
	</select>
	
	<!-- 하위 옵션 삭제 -->	
	<delete id="deleteOptionValue" parameterType="long">
	<![CDATA[
		delete from optionvalue
		where product_no=#{no }
	]]>
	</delete>
	
	<!-- 최종 옵션 삭제 -->	
	<delete id="deleteOption" parameterType="long">
	<![CDATA[
		delete from productoption
		where product_no=#{no }
	]]>
	</delete>

</mapper>
